.CodeMirror {
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5em;
  height: 100%;
  font-family: $editor-font;
  background-color: #f7f7f7;
  border: none;
  @media (max-width: 768px) {
    font-size: 12px;
  }
}

.CodeMirror-gutters {
  border-right: 1px solid #ddd;
  background-color: #f7f7f7;
  white-space: nowrap;
  min-width: 50px;
}

.CodeMirror-linenumber {
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: left;
  color: #999;
  white-space: nowrap;
}

.CodeMirror-code {
  right: 30px;
}

.CodeMirror-sizer {
  margin-left: 51px !important;
}

#preview {
  width: 100%;
  height: 100%;
}

// theme

.cm-s-default .cm-header {
  color: blue;
}
.cm-s-default .cm-quote {
  color: #090;
}
.cm-negative {
  color: #d44;
}
.cm-positive {
  color: #292;
}
.cm-header,
.cm-strong {
  font-weight: bold;
}
.cm-em {
  font-style: italic;
}
.cm-link {
  text-decoration: underline;
}
.cm-strikethrough {
  text-decoration: line-through;
}

.cm-s-default .cm-keyword {
  color: $css-primary;
}
.cm-s-default .cm-atom {
  color: #219;
}
.cm-s-default .cm-number {
  color: #164;
}
.cm-s-default .cm-def {
  color: $js-primary;
}
.cm-s-default .cm-variable {
  color: $about-primary;
}
.cm-s-default .cm-punctuation,
.cm-s-default .cm-property,
.cm-s-default .cm-operator {
  color: $material-dark-gray;
}
.cm-s-default .cm-variable-2 {
  color: #05a;
}
.cm-s-default .cm-variable-3 {
  color: #085;
}
.cm-s-default .cm-comment {
  color: $gray;
}
.cm-s-default .cm-string {
  color: $ang-primary;
}
.cm-s-default .cm-string-2 {
  color: #f50;
}
.cm-s-default .cm-meta {
  color: $gray;
}
.cm-s-default .cm-qualifier {
  color: #555;
}
.cm-s-default .cm-builtin {
  color: #30a;
}
.cm-s-default .cm-bracket {
  color: #997;
}
.cm-s-default .cm-tag {
  color: $material-light-gray;
}
.cm-s-default .cm-attribute {
  color: $css-primary;
}
.cm-s-default .cm-hr {
  color: #999;
}
.cm-s-default .cm-link {
  color: #00c;
}

.cm-s-default .cm-error {
  color: #f00;
}
.cm-invalidchar {
  color: #f00;
}

.CodeMirror-composing {
  border-bottom: 2px solid;
}

/* Default styles for common addons */

div.CodeMirror span.CodeMirror-matchingbracket {
  color: #0f0;
}
div.CodeMirror span.CodeMirror-nonmatchingbracket {
  color: #f22;
}
.CodeMirror-matchingtag {
  background: rgba($light-gray, 0.2);
}
.CodeMirror-activeline-background {
  background: rgba($light-gray, 0.1);
}

.editor-wrapper {
  height: 100%;
}

.editor-full {
  position: fixed;
  top: 0px;
  left: 0px;
  width: 100%;
  z-index: 25;
}

.editor-main {
  border: 1px solid $light-gray;
  height: calc(100% - 70px);
}

.editor-buttons {
  button {
    color: rgba($light, 0.8);
    padding-top: 2px;
  }
  button:hover {
    color: $light;
  }
}

.editor-header {
  height: 30px;
}

.editor-footer {
  width: 100%;
  height: 30px;
  color: rgba($light, 0.8);
  text-align: right;
  padding: 7px;
  .counter-text {
    display: inline-block;
    margin-right: 10px;
  }
}

.CodeMirror-hints {
  position: absolute;
  z-index: 10;
  overflow: hidden;
  list-style: none;
  min-width: 150px;
  line-height: 2em;

  margin: 0;
  padding: 0;

  -webkit-box-shadow: 2px 3px 5px rgba(0, 0, 0, 0.2);
  -moz-box-shadow: 2px 3px 5px rgba(0, 0, 0, 0.2);
  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);
  border-radius: 0;
  border: none;

  background: white;
  font-size: 16px;
  font-family: $editor-font;
  text-align: left;

  max-height: 20em;
  overflow-y: auto;
}

.CodeMirror-hint {
  margin: 0;
  padding: 0 4px;
  border-radius: 0px;
  max-width: 19em;
  overflow: hidden;
  white-space: pre;
  color: $dark-gray;
  cursor: pointer;
}

li.CodeMirror-hint-active {
  background: $light;
  color: $material-dark-gray;
}
